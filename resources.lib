////////////////////////////////////////////////////////////////////
version="$Id$";
category="General purpose";
info="
LIBRARY:   resources.lib  Tools to manage compute servers
AUTHOR:    Andreas Steenpass, e-mail: steenpass@mathematik.uni-kl.de

SEE ALSO:  link, tasks_lib, parallel_lib

KEYWORDS:  Semaphores; Parallelization; Links, user interface

PROCEDURES:
";

/* initialize the (lib-)global variable NCORES */
static proc mod_init()
{
    int sem_cores = 0;   // set in kernel
    exportto(Resources, sem_cores);
    int NCORES = system("semaphore", "get_value", sem_cores)+1;
    exportto(Resources, NCORES);
}

proc addcores(int n)
"USAGE:   addcores(n), n int
RETURN:   the number of cores that will be used.
          @* n cores will be added to the number of cores to use.
          @* If n is negative, the number of cores to use will be reduced. Note
          that this adjustment may take some time.
NOTE:     The number of cores to use must be at least 1.
SEE ALSO: setcores, getcores, tasks_lib, parallel_lib
KEYWORDS: Parallelization; Links
EXAMPLE:  example addcores; shows an example"
{
    /* check for errors */
    if (NCORES+n < 1) {
        ERROR("The number of cores to use must be at least 1.");
    }

    /* change value of semaphore */
    int i;
    int tmp;
    if (n >= 0) {
        for (i = n; i > 0; i--) {
            tmp = system("semaphore", "release", sem_cores);
        }
    }
    else {
        for (i = n; i < 0; i++) {
            tmp = system("semaphore", "acquire", sem_cores);
        }
    }

    /* adjust and return NCORES */
    NCORES = NCORES+n;
    return(NCORES);
}
example
{
    "EXAMPLE:";
    echo = 2;
    setcores(4);
    addcores(-2);
}

proc setcores(int n)
"USAGE:   setcores(n), n int
RETURN:   the number of cores that will be used.
          @* The number of cores to use will be set to n.
          @* Note that reducing the number of cores to use may take some time.
NOTE:     The number of cores to use must be at least 1.
SEE ALSO: addcores, getcores, tasks_lib, parallel_lib
KEYWORDS: Parallelization; Links
EXAMPLE:  example setcores; shows an example"
{
    return(addcores(n-NCORES));
}
example
{
    "EXAMPLE:";
    echo = 2;
    setcores(2);
    setcores(4);
}

proc getcores()
"USAGE:   addcores(n), n int
RETURN:   the number of cores that are used.
SEE ALSO: addcores, setcores, tasks_lib, parallel_lib
KEYWORDS: Parallelization; Links
EXAMPLE:  example getcores; shows an example"
{
    return(NCORES);
}
example
{
    "EXAMPLE:";
    echo = 2;
    setcores(4);
    getcores();
}

